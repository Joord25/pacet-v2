[프로젝트 핵심 개발 원칙]

1. 역할 기반 아키텍처 (RBAC) 준수:
모든 기능은 member, trainer, admin 이라는 3가지 역할(Role)을 기반으로 설계되고 구현되어야 한다.
로그인 시 AuthContext에 저장된 role 값을 기준으로 UI와 데이터 접근 권한을 명확히 분리한다.

2. 동적 데이터 및 UI 구현:
모든 UI는 특정 사용자나 데이터에 하드코딩되어서는 안 된다.
새로운 회원이나 트레이너가 가입하더라도, 코드를 수정하지 않고 시스템이 자동으로 동일한 UI와 기능을 제공해야 한다. 데이터의 변경에 따라 UI가 동적으로 렌더링되어야 한다.

3. 기존 디자인 및 기획 의도 준수:
새로운 기능을 추가하거나 UI를 수정할 때는 반드시 기존의 디자인 양식과 기획 의도를 먼저 파악하고 따른다.
임의로 새로운 UI 컴포넌트나 정보 표시 방식을 추가하지 않는다. 변경이 필요할 경우, 먼저 사용자에게 제안하고 확인을 받는다.

4. 중앙 상태 관리 (Context API) 활용:
데이터의 일관성을 위해 UserContext, SessionContext, ContractContext 등 중앙 집중식 상태 관리를 최우선으로 사용한다.
컴포넌트 내에서 개별적으로 데이터를 관리하기보다, Context를 통해 데이터를 가져오고 업데이트하는 것을 원칙으로 한다.